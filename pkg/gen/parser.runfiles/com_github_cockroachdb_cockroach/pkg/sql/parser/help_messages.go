// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
  //line sql.y: 1955
  `ALTER`: {
    //line sql.y: 1956
    Category: hGroup,
    //line sql.y: 1957
    Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES,ALTER EXTERNAL CONNECTION
`,
  },
  //line sql.y: 1985
  `ALTER TABLE`: {
    ShortDescription: `change the definition of a table`,
    //line sql.y: 1986
    Category: hDDL,
    //line sql.y: 1987
    Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> ADD GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [ ( opt_sequence_option_list ) ]
  ALTER TABLE ... ALTER [COLUMN] <colname> SET GENERATED { ALWAYS | BY DEFAULT }
  ALTER TABLE ... ALTER [COLUMN] <colname> <identity_option_list>
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP IDENTITY [ IF EXISTS ]
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]
  ALTER TABLE ... {ENABLE | DISABLE | FORCE | NO FORCE} ROW LEVEL SECURITY

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 2035
    SeeAlso: `WEBDOCS/alter-table.html
`,
  },
  //line sql.y: 2052
  `ALTER PARTITION`: {
    ShortDescription: `apply zone configurations to a partition`,
    //line sql.y: 2053
    Category: hDDL,
    //line sql.y: 2054
    Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 2073
    SeeAlso: `WEBDOCS/alter-partition.html
`,
  },
  //line sql.y: 2078
  `ALTER VIEW`: {
    ShortDescription: `change the definition of a view`,
    //line sql.y: 2079
    Category: hDDL,
    //line sql.y: 2080
    Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
    //line sql.y: 2083
    SeeAlso: `WEBDOCS/alter-view.html
`,
  },
  //line sql.y: 2093
  `ALTER SEQUENCE`: {
    ShortDescription: `change the definition of a sequence`,
    //line sql.y: 2094
    Category: hDDL,
    //line sql.y: 2095
    Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
  },
  //line sql.y: 2124
  `ALTER DATABASE`: {
    ShortDescription: `change the definition of a database`,
    //line sql.y: 2125
    Category: hDDL,
    //line sql.y: 2126
    Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
    //line sql.y: 2139
    SeeAlso: `WEBDOCS/alter-database.html
`,
  },
  //line sql.y: 2158
  `ALTER FUNCTION`: {
    ShortDescription: `change the definition of a function`,
    //line sql.y: 2159
    Category: hDDL,
    //line sql.y: 2160
    Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
   [ EXTERNAL ] SECURITY { INVOKER | DEFINER }
`,
    //line sql.y: 2176
    SeeAlso: `WEBDOCS/alter-function.html
`,
  },
  //line sql.y: 2185
  `ALTER PROCEDURE`: {
    ShortDescription: `change the definition of a procedure`,
    //line sql.y: 2186
    Category: hDDL,
    //line sql.y: 2187
    Text: `
ALTER PROCEDURE name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER PROCEDURE name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER PROCEDURE name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

`,
    //line sql.y: 2195
    SeeAlso: `WEBDOCS/alter-procedure.html
`,
  },
  //line sql.y: 2389
  `ALTER RANGE`: {
    ShortDescription: `change the parameters of a range`,
    //line sql.y: 2390
    Category: hDDL,
    //line sql.y: 2391
    Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 2407
    SeeAlso: `ALTER TABLE
`,
  },
  //line sql.y: 2413
  `ALTER INDEX`: {
    ShortDescription: `change the definition of an index`,
    //line sql.y: 2414
    Category: hDDL,
    //line sql.y: 2415
    Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE | INVISIBLE | VISIBILITY ...]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 2433
    SeeAlso: `WEBDOCS/alter-index.html
`,
  },
  //line sql.y: 3224
  `ALTER TYPE`: {
    ShortDescription: `change the definition of a type.`,
    //line sql.y: 3225
    Category: hDDL,
    //line sql.y: 3226
    Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
    //line sql.y: 3242
    SeeAlso: `WEBDOCS/alter-type.html
`,
  },
  //line sql.y: 3391
  `REFRESH`: {
    ShortDescription: `recalculate a materialized view`,
    //line sql.y: 3392
    Category: hMisc,
    //line sql.y: 3393
    Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [AS OF SYSTEM TIME <expr>>] [WITH [NO] DATA]
`,
  },
  //line sql.y: 3421
  `BACKUP`: {
    ShortDescription: `back up data to external storage`,
    //line sql.y: 3422
    Category: hCCL,
    //line sql.y: 3423
    Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup
   include_all_virtual_clusters: enable backups of all virtual clusters during a cluster backup

`,
    //line sql.y: 3458
    SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
  },
  //line sql.y: 3596
  `CREATE SCHEDULE FOR BACKUP`: {
    ShortDescription: `backup data periodically`,
    //line sql.y: 3597
    Category: hCCL,
    //line sql.y: 3598
    Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
    //line sql.y: 3668
    SeeAlso: `BACKUP
`,
  },
  //line sql.y: 3686
  `ALTER BACKUP SCHEDULE`: {
    ShortDescription: `alter an existing backup schedule`,
    //line sql.y: 3687
    Category: hCCL,
    //line sql.y: 3688
    Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
    //line sql.y: 3700
    SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
  },
  //line sql.y: 3847
  `ALTER EXTERNAL CONNECTION`: {
    ShortDescription: `alter an existing external connection`,
    //line sql.y: 3848
    Category: hMisc,
    //line sql.y: 3849
    Text: `
ALTER EXTERNAL CONNECTION [IF EXISTS] <name> AS <endpoint>

Name:
  Name of the created external connection

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
  },
  //line sql.y: 3878
  `CREATE EXTERNAL CONNECTION`: {
    ShortDescription: `create a new external connection`,
    //line sql.y: 3879
    Category: hMisc,
    //line sql.y: 3880
    Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
  },
  //line sql.y: 3898
  `CHECK EXTERNAL CONNECTION`: {
    ShortDescription: `check the status of an external connection`,
    //line sql.y: 3899
    Category: hMisc,
    //line sql.y: 3900
    Text: `
CREATE EXTERNAL CONNECTION <uri> [WITH <options>]

Uri:
  Uri for the external connection.
`,
  },
  //line sql.y: 3956
  `DROP EXTERNAL CONNECTION`: {
    ShortDescription: `drop an existing external connection`,
    //line sql.y: 3957
    Category: hMisc,
    //line sql.y: 3958
    Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
  },
  //line sql.y: 3972
  `RESTORE`: {
    ShortDescription: `restore data from external storage`,
    //line sql.y: 3973
    Category: hCCL,
    //line sql.y: 3974
    Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   skip_missing_udfs: skip restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   new_db_name: renames the restored database. only applies to database restores
   include_all_virtual_clusters: enable backups of all virtual clusters during a cluster backup
`,
    //line sql.y: 4003
    SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
  },
  //line sql.y: 4201
  `IMPORT`: {
    ShortDescription: `load data from file in a distributed manner`,
    //line sql.y: 4202
    Category: hCCL,
    //line sql.y: 4203
    Text: `
Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
    //line sql.y: 4207
    SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
  },
  //line sql.y: 4221
  `EXPORT`: {
    ShortDescription: `export data to file in a distributed manner`,
    //line sql.y: 4222
    Category: hCCL,
    //line sql.y: 4223
    Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
    //line sql.y: 4233
    SeeAlso: `SELECT
`,
  },
  //line sql.y: 4305
  `CALL`: {
    ShortDescription: `invoke a procedure`,
    //line sql.y: 4306
    Category: hMisc,
    //line sql.y: 4307
    Text: `CALL <name> ( [ <expr> [, ...] ] )
`,
    //line sql.y: 4308
    SeeAlso: `CREATE PROCEDURE
`,
  },
  //line sql.y: 4550
  `CANCEL`: {
    //line sql.y: 4551
    Category: hGroup,
    //line sql.y: 4552
    Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
  },
  //line sql.y: 4560
  `CANCEL JOBS`: {
    ShortDescription: `cancel background jobs`,
    //line sql.y: 4561
    Category: hMisc,
    //line sql.y: 4562
    Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
    //line sql.y: 4565
    SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
  },
  //line sql.y: 4587
  `CANCEL QUERIES`: {
    ShortDescription: `cancel running queries`,
    //line sql.y: 4588
    Category: hMisc,
    //line sql.y: 4589
    Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
    //line sql.y: 4592
    SeeAlso: `SHOW STATEMENTS
`,
  },
  //line sql.y: 4623
  `CANCEL SESSIONS`: {
    ShortDescription: `cancel open sessions`,
    //line sql.y: 4624
    Category: hMisc,
    //line sql.y: 4625
    Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
    //line sql.y: 4628
    SeeAlso: `SHOW SESSIONS
`,
  },
  //line sql.y: 4659
  `CANCEL ALL JOBS`: {
    ShortDescription: `cancel all background jobs`,
    //line sql.y: 4660
    Category: hMisc,
    //line sql.y: 4661
    Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
  },
  //line sql.y: 4728
  `CREATE`: {
    //line sql.y: 4729
    Category: hGroup,
    //line sql.y: 4730
    Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION, CREATE SCHEDULE
CREATE CHANGEFEED
`,
  },
  //line sql.y: 4748
  `CHECK`: {
    //line sql.y: 4749
    Category: hGroup,
    //line sql.y: 4750
    Text: `
CHECK EXTERNAL CONNECTION
`,
  },
  //line sql.y: 4756
  `CREATE LOGICAL REPLICATION STREAM`: {
    ShortDescription: `create a new logical replication stream`,
    //line sql.y: 4757
    Category: hExperimental,
    //line sql.y: 4758
    Text: `
CREATE LOGICAL REPLICATION STREAM
 FROM <TABLE remote_name | TABLES (remote_name, ...) | DATABASE remote_name>
 ON 'stream_uri'
 INTO <TABLE remote_name | TABLES (remote_name, ...) | DATABASE remote_name>
 [WITH
 < MODE = immediate | validated > |
 < CURSOR = start_time > |
 < DEFAULT FUNCTION = lww | dlq | udf
 < FUNCTION 'udf' FOR TABLE local_name  , ... > |
 < DISCARD = 'ttl-deletes' >
]
`,
  },
  //line sql.y: 4945
  `CREATE VIRTUAL CLUSTER`: {
    ShortDescription: `create a new virtual cluster`,
    //line sql.y: 4946
    Category: hExperimental,
    //line sql.y: 4947
    Text: `
CREATE VIRTUAL CLUSTER [ IF NOT EXISTS ] name [ <replication> ]

Replication option:
   FROM REPLICATION OF name ON <location> [ WITH OPTIONS ... ]
`,
  },
  //line sql.y: 5054
  `CREATE SCHEDULE`: {
    //line sql.y: 5055
    Category: hGroup,
    //line sql.y: 5056
    Text: `
CREATE SCHEDULE FOR BACKUP,
CREATE SCHEDULE FOR CHANGEFEED
`,
  },
  //line sql.y: 5064
  `CREATE EXTENSION`: {
    ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
    //line sql.y: 5065
    Category: hCfg,
    //line sql.y: 5066
    Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
  },
  //line sql.y: 5084
  `ALTER POLICY`: {
    ShortDescription: `alter an existing row-level security policy`,
    //line sql.y: 5085
    Category: hDDL,
    //line sql.y: 5086
    Text: `
ALTER POLICY name ON table_name RENAME TO new_policy_name

ALTER POLICY name ON table_name
      [ TO { role_name | PUBLIC | CURRENT_USER | SESSION_USER } [, ...] ]
      [ USING ( using_expression ) ]
      [ WITH CHECK ( check_expression ) ]

`,
    //line sql.y: 5094
    SeeAlso: `CREATE POLICY, DROP POLICY
`,
  },
  //line sql.y: 5115
  `CREATE POLICY`: {
    ShortDescription: `define a new row-level security policy for a table`,
    //line sql.y: 5116
    Category: hDDL,
    //line sql.y: 5117
    Text: `
CREATE POLICY [IF NOT EXISTS] name ON table_name
    [ AS { PERMISSIVE | RESTRICTIVE } ]
    [ FOR { ALL | SELECT | INSERT | UPDATE | DELETE } ]
    [ TO { role_name | PUBLIC | CURRENT_USER | SESSION_USER } [, ...] ]
    [ USING ( using_expression ) ]
    [ WITH CHECK ( check_expression ) ]

`,
    //line sql.y: 5125
    SeeAlso: `ALTER POLICY, DROP POLICY
`,
  },
  //line sql.y: 5153
  `DROP POLICY`: {
    ShortDescription: `remove an existing row-level security policy from a table`,
    //line sql.y: 5154
    Category: hDDL,
    //line sql.y: 5155
    Text: `
DROP POLICY [ IF EXISTS ] name ON table_name [ CASCADE | RESTRICT ]

`,
    //line sql.y: 5158
    SeeAlso: `CREATE POLICY, ALTER POLICY
`,
  },
  //line sql.y: 5278
  `CREATE FUNCTION`: {
    ShortDescription: `define a new function`,
    //line sql.y: 5279
    Category: hDDL,
    //line sql.y: 5280
    Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
   | { [ EXTERNAL ] SECURITY { INVOKER | DEFINER } }
 } ...
`,
    //line sql.y: 5291
    SeeAlso: `WEBDOCS/create-function.html
`,
  },
  //line sql.y: 5358
  `CREATE PROCEDURE`: {
    ShortDescription: `define a new procedure`,
    //line sql.y: 5359
    Category: hDDL,
    //line sql.y: 5360
    Text: `
CREATE [ OR REPLACE ] PROCEDURE
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
 { LANGUAGE lang_name
   | AS 'definition'
 } ...
`,
    //line sql.y: 5366
    SeeAlso: `WEBDOCS/create-procedure.html
`,
  },
  //line sql.y: 5643
  `DO`: {
    ShortDescription: `execute an anonymous code block`,
    //line sql.y: 5644
    Category: hMisc,
    //line sql.y: 5645
    Text: `
DO [LANGUAGE lang_name] code
`,
  },
  //line sql.y: 5682
  `DROP FUNCTION`: {
    ShortDescription: `remove a function`,
    //line sql.y: 5683
    Category: hDDL,
    //line sql.y: 5684
    Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
    //line sql.y: 5687
    SeeAlso: `WEBDOCS/drop-function.html
`,
  },
  //line sql.y: 5706
  `DROP PROCEDURE`: {
    ShortDescription: `remove a procedure`,
    //line sql.y: 5707
    Category: hDDL,
    //line sql.y: 5708
    Text: `
DROP PROCEDURE [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
    //line sql.y: 5711
    SeeAlso: `WEBDOCS/drop-procedure.html
`,
  },
  //line sql.y: 5877
  `CREATE TRIGGER`: {
    ShortDescription: `define a new trigger`,
    //line sql.y: 5878
    Category: hDDL,
    //line sql.y: 5879
    Text: `
CREATE [ OR REPLACE ] TRIGGER name { BEFORE | AFTER | INSTEAD OF }
 { INSERT | DELETE | UPDATE [ OF column_name [, ...] ] | TRUNCATE | UPSERT }
 ON table_name [ REFERENCING { NEW | OLD } TABLE [ AS ] table_alias_name [...] ]
 [ FOR { EACH ROW | EACH STATEMENT } ]
 [ WHEN a_expr ]
 EXECUTE FUNCTION func_name ( trigger_func_args )
`,
  },
  //line sql.y: 6064
  `DROP TRIGGER`: {
    ShortDescription: `remove a trigger`,
    //line sql.y: 6065
    Category: hDDL,
    //line sql.y: 6066
    Text: `
DROP TRIGGER [ IF EXISTS ] name ON table_name [ CASCADE | RESTRICT ]
`,
  },
  //line sql.y: 6149
  `CREATE STATISTICS`: {
    ShortDescription: `create a new table statistic`,
    //line sql.y: 6150
    Category: hMisc,
    //line sql.y: 6151
    Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
  },
  //line sql.y: 6251
  `CREATE CHANGEFEED`: {
    ShortDescription: `create change data capture`,
    //line sql.y: 6252
    Category: hCCL,
    //line sql.y: 6253
    Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
  },
  //line sql.y: 6306
  `CREATE SCHEDULE FOR CHANGEFEED`: {
    ShortDescription: `create changefeed periodically`,
    //line sql.y: 6307
    Category: hCCL,
    //line sql.y: 6308
    Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR CHANGEFEED
<targets> INTO <sink> [WITH <options>]
RECURRING [crontab|NEVER]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All changefeeds run in UTC timezone.

Description:
  Optional description (or name) for this schedule

RECURRING <crontab>:
  The RECURRING expression specifies when export runs
  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

sink: data capture stream destination (Enterprise only)
`,
    //line sql.y: 6330
    SeeAlso: `CREATE CHANGEFEED
`,
  },
  //line sql.y: 6431
  `DELETE`: {
    ShortDescription: `delete rows from a table`,
    //line sql.y: 6432
    Category: hDML,
    //line sql.y: 6433
    Text: `
DELETE
   [BATCH [SIZE <expr>]]
   FROM <tablename>
   [WHERE <expr>]
   [ORDER BY <exprs...>]
   [USING <exprs...>]
   [LIMIT <expr>]
   [RETURNING <exprs...>]
`,
    //line sql.y: 6442
    SeeAlso: `WEBDOCS/delete.html
`,
  },
  //line sql.y: 6510
  `DISCARD`: {
    ShortDescription: `reset the session to its initial state`,
    //line sql.y: 6511
    Category: hCfg,
    //line sql.y: 6512
    Text: `DISCARD ALL
`,
  },
  //line sql.y: 6533
  `DROP`: {
    //line sql.y: 6534
    Category: hGroup,
    //line sql.y: 6535
    Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
  },
  //line sql.y: 6560
  `DROP VIEW`: {
    ShortDescription: `remove a view`,
    //line sql.y: 6561
    Category: hDDL,
    //line sql.y: 6562
    Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 6563
    SeeAlso: `WEBDOCS/drop-index.html
`,
  },
  //line sql.y: 6593
  `DROP SEQUENCE`: {
    ShortDescription: `remove a sequence`,
    //line sql.y: 6594
    Category: hDDL,
    //line sql.y: 6595
    Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 6596
    SeeAlso: `DROP
`,
  },
  //line sql.y: 6608
  `DROP TABLE`: {
    ShortDescription: `remove a table`,
    //line sql.y: 6609
    Category: hDDL,
    //line sql.y: 6610
    Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 6611
    SeeAlso: `WEBDOCS/drop-table.html
`,
  },
  //line sql.y: 6623
  `DROP INDEX`: {
    ShortDescription: `remove an index`,
    //line sql.y: 6624
    Category: hDDL,
    //line sql.y: 6625
    Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 6626
    SeeAlso: `WEBDOCS/drop-index.html
`,
  },
  //line sql.y: 6648
  `DROP DATABASE`: {
    ShortDescription: `remove a database`,
    //line sql.y: 6649
    Category: hDDL,
    //line sql.y: 6650
    Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
    //line sql.y: 6651
    SeeAlso: `WEBDOCS/drop-database.html
`,
  },
  //line sql.y: 6671
  `DROP TYPE`: {
    ShortDescription: `remove a type`,
    //line sql.y: 6672
    Category: hDDL,
    //line sql.y: 6673
    Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
  },
  //line sql.y: 6693
  `DROP VIRTUAL CLUSTER`: {
    ShortDescription: `remove a virtual cluster`,
    //line sql.y: 6694
    Category: hExperimental,
    //line sql.y: 6695
    Text: `DROP VIRTUAL CLUSTER [IF EXISTS] <virtual_cluster_spec> [IMMEDIATE]
`,
  },
  //line sql.y: 6739
  `DROP SCHEMA`: {
    ShortDescription: `remove a schema`,
    //line sql.y: 6740
    Category: hDDL,
    //line sql.y: 6741
    Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
  },
  //line sql.y: 6761
  `DROP ROLE`: {
    ShortDescription: `remove a user`,
    //line sql.y: 6762
    Category: hPriv,
    //line sql.y: 6763
    Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
    //line sql.y: 6764
    SeeAlso: `CREATE ROLE, SHOW ROLE
`,
  },
  //line sql.y: 6797
  `ANALYZE`: {
    ShortDescription: `collect table statistics`,
    //line sql.y: 6798
    Category: hMisc,
    //line sql.y: 6799
    Text: `
ANALYZE <tablename>

`,
    //line sql.y: 6802
    SeeAlso: `CREATE STATISTICS
`,
  },
  //line sql.y: 6825
  `EXPLAIN`: {
    ShortDescription: `show the logical plan of a query`,
    //line sql.y: 6826
    Category: hMisc,
    //line sql.y: 6827
    Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
    //line sql.y: 6841
    SeeAlso: `WEBDOCS/explain.html
`,
  },
  //line sql.y: 6967
  `ALTER JOB`: {
    ShortDescription: `alter an existing job`,
    //line sql.y: 6968
    Category: hMisc,
    //line sql.y: 6969
    Text: `
ALTER JOB <jobid> <cmd>
`,
    //line sql.y: 6971
    SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
  },
  //line sql.y: 6983
  `ALTER CHANGEFEED`: {
    ShortDescription: `alter an existing changefeed`,
    //line sql.y: 6984
    Category: hCCL,
    //line sql.y: 6985
    Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
  },
  //line sql.y: 7036
  `ALTER BACKUP`: {
    ShortDescription: `alter an existing backup's encryption keys`,
    //line sql.y: 7037
    Category: hCCL,
    //line sql.y: 7038
    Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
  },
  //line sql.y: 7092
  `SHOW VIRTUAL CLUSTER`: {
    ShortDescription: `display metadata about virtual clusters`,
    //line sql.y: 7093
    Category: hExperimental,
    //line sql.y: 7094
    Text: `
SHOW VIRTUAL CLUSTER { <virtual_cluster_spec> | ALL } [ WITH <options> ]
SHOW VIRTUAL CLUSTERS                                 [ WITH <options> ]

Options:
    REPLICATION STATUS
    CAPABILITIES
`,
  },
  //line sql.y: 7191
  `SHOW LOGICAL REPLICATION JOBS`: {
    ShortDescription: `display metadata about logical replication jobs`,
    //line sql.y: 7192
    Category: hExperimental,
    //line sql.y: 7193
    Text: `SHOW LOGICAL REPLICATION JOBS [ WITH <options> ]

Options:
    DETAILS
`,
  },
  //line sql.y: 7226
  `PREPARE`: {
    ShortDescription: `prepare a statement for later execution`,
    //line sql.y: 7227
    Category: hMisc,
    //line sql.y: 7228
    Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
    //line sql.y: 7229
    SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
  },
  //line sql.y: 7260
  `EXECUTE`: {
    ShortDescription: `execute a statement prepared previously`,
    //line sql.y: 7261
    Category: hMisc,
    //line sql.y: 7262
    Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
    //line sql.y: 7263
    SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
  },
  //line sql.y: 7293
  `DEALLOCATE`: {
    ShortDescription: `remove a prepared statement`,
    //line sql.y: 7294
    Category: hMisc,
    //line sql.y: 7295
    Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
    //line sql.y: 7296
    SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
  },
  //line sql.y: 7316
  `GRANT`: {
    ShortDescription: `define access privileges and role memberships`,
    //line sql.y: 7317
    Category: hPriv,
    //line sql.y: 7318
    Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
    //line sql.y: 7335
    SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
  },
  //line sql.y: 7442
  `REVOKE`: {
    ShortDescription: `remove access privileges and role memberships`,
    //line sql.y: 7443
    Category: hPriv,
    //line sql.y: 7444
    Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
    //line sql.y: 7461
    SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
  },
  //line sql.y: 7685
  `RESET`: {
    ShortDescription: `reset a session variable to its default value`,
    //line sql.y: 7686
    Category: hCfg,
    //line sql.y: 7687
    Text: `RESET [SESSION] <var>
`,
    //line sql.y: 7688
    SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 7704
  `RESET CLUSTER SETTING`: {
    ShortDescription: `reset a cluster setting to its default value`,
    //line sql.y: 7705
    Category: hCfg,
    //line sql.y: 7706
    Text: `RESET CLUSTER SETTING <var>
`,
    //line sql.y: 7707
    SeeAlso: `SET CLUSTER SETTING, RESET
`,
  },
  //line sql.y: 7716
  `USE`: {
    ShortDescription: `set the current database`,
    //line sql.y: 7717
    Category: hCfg,
    //line sql.y: 7718
    Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
    //line sql.y: 7721
    SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 7742
  `SCRUB`: {
    ShortDescription: `run checks against databases or tables`,
    //line sql.y: 7743
    Category: hExperimental,
    //line sql.y: 7744
    Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that can be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
    //line sql.y: 7752
    SeeAlso: `INSPECT, SCRUB TABLE, SCRUB DATABASE
`,
  },
  //line sql.y: 7758
  `SCRUB DATABASE`: {
    ShortDescription: `run scrub checks on a database`,
    //line sql.y: 7759
    Category: hExperimental,
    //line sql.y: 7760
    Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
    //line sql.y: 7768
    SeeAlso: `SCRUB TABLE, SCRUB
`,
  },
  //line sql.y: 7776
  `SCRUB TABLE`: {
    ShortDescription: `run scrub checks on a table`,
    //line sql.y: 7777
    Category: hExperimental,
    //line sql.y: 7778
    Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
    //line sql.y: 7789
    SeeAlso: `SCRUB DATABASE, SCRUB
`,
  },
  //line sql.y: 7844
  `INSPECT`: {
    ShortDescription: `run checks against databases or tables`,
    //line sql.y: 7845
    Category: hMisc,
    //line sql.y: 7846
    Text: `
INSPECT TABLE <table> ...
INSPECT DATABASE <database> ...

`,
    //line sql.y: 7850
    SeeAlso: `INSPECT TABLE, INSPECT DATABASE, SCRUB
`,
  },
  //line sql.y: 7856
  `INSPECT TABLE`: {
    ShortDescription: `run inspect checks on a table`,
    //line sql.y: 7857
    Category: hMisc,
    //line sql.y: 7858
    Text: `
INSPECT TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  INSPECT TABLE ... WITH OPTIONS INDEX ALL
  INSPECT TABLE ... WITH OPTIONS INDEX (<index>...)
`,
    //line sql.y: 7866
    SeeAlso: `INSPECT DATABASE, INSPECT
`,
  },
  //line sql.y: 7879
  `INSPECT DATABASE`: {
    ShortDescription: `run inspect checks on a database`,
    //line sql.y: 7880
    Category: hMisc,
    //line sql.y: 7881
    Text: `
INSPECT DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]
                            [WITH OPTIONS <option> [, ...]]
Options:
  INSPECT DATABASE ... WITH OPTIONS INDEX ALL
  INSPECT DATABASE ... WITH OPTIONS INDEX (<index>...)
`,
    //line sql.y: 7888
    SeeAlso: `INSPECT TABLE, INSPECT
`,
  },
  //line sql.y: 7931
  `SET CLUSTER SETTING`: {
    ShortDescription: `change a cluster setting`,
    //line sql.y: 7932
    Category: hCfg,
    //line sql.y: 7933
    Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
    //line sql.y: 7934
    SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
  },
  //line sql.y: 7944
  `ALTER VIRTUAL CLUSTER`: {
    ShortDescription: `alter configuration of virtual clusters`,
    //line sql.y: 7945
    Category: hGroup,
    //line sql.y: 7946
    Text: `
ALTER VIRTUAL CLUSTER REPLICATION, ALTER VIRTUAL CLUSTER SETTING,
ALTER VIRTUAL CLUSTER CAPABILITY, ALTER VIRTUAL CLUSTER RENAME,
ALTER VIRTUAL CLUSTER RESET, ALTER VIRTUAL CLUSTER SERVICE
`,
  },
  //line sql.y: 7966
  `ALTER VIRTUAL CLUSTER RESET`: {
    ShortDescription: `reset data state of a virtual cluster`,
    //line sql.y: 7967
    Category: hExperimental,
    //line sql.y: 7968
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> RESET DATA TO SYSTEM TIME <time>
`,
  },
  //line sql.y: 7980
  `ALTER VIRTUAL CLUSTER RENAME`: {
    ShortDescription: `rename a virtual cluster`,
    //line sql.y: 7981
    Category: hExperimental,
    //line sql.y: 7982
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> RENAME TO <name>
`,
  },
  //line sql.y: 7993
  `ALTER VIRTUAL CLUSTER SERVICE`: {
    ShortDescription: `alter service mode of a virtual cluster`,
    //line sql.y: 7994
    Category: hExperimental,
    //line sql.y: 7995
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> START SERVICE EXTERNAL
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> START SERVICE SHARED
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> STOP SERVICE
`,
  },
  //line sql.y: 8026
  `ALTER VIRTUAL CLUSTER REPLICATION`: {
    ShortDescription: `alter replication stream between virtual clusters`,
    //line sql.y: 8027
    Category: hExperimental,
    //line sql.y: 8028
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> PAUSE REPLICATION
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> RESUME REPLICATION
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> COMPLETE REPLICATION TO LATEST
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> COMPLETE REPLICATION TO SYSTEM TIME 'time'
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> SET REPLICATION opt=value,...
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> SET SOURCE REPLICATION opt=value,...
`,
  },
  //line sql.y: 8094
  `ALTER VIRTUAL CLUSTER SETTING`: {
    ShortDescription: `alter cluster setting overrides for virtual clusters`,
    //line sql.y: 8095
    Category: hGroup,
    //line sql.y: 8096
    Text: `
ALTER VIRTUAL CLUSTER { <virtual_cluster_spec> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER VIRTUAL CLUSTER { <virtual_cluster_spec> | ALL } RESET CLUSTER SETTING <var>
`,
    //line sql.y: 8099
    SeeAlso: `SET CLUSTER SETTING
`,
  },
  //line sql.y: 8139
  `ALTER VIRTUAL CLUSTER CAPABILITY`: {
    ShortDescription: `alter system capability of virtual cluster`,
    //line sql.y: 8140
    Category: hGroup,
    //line sql.y: 8141
    Text: `
ALTER VIRTUAL CLUSTER <tenant_id> GRANT CAPABILITY <var> { TO | = } <value>
ALTER VIRTUAL CLUSTER <tenant_id> REVOKE CAPABILITY <var>
`,
  },
  //line sql.y: 8215
  `SET SESSION`: {
    ShortDescription: `change a session variable`,
    //line sql.y: 8216
    Category: hCfg,
    //line sql.y: 8217
    Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { READ COMMITTED | REPEATABLE READ | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
    //line sql.y: 8223
    SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 8254
  `SET LOCAL`: {
    ShortDescription: `change a session variable scoped to the current transaction`,
    //line sql.y: 8255
    Category: hCfg,
    //line sql.y: 8256
    Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
    //line sql.y: 8260
    SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 8271
  `SET TRANSACTION`: {
    ShortDescription: `configure the transaction settings`,
    //line sql.y: 8272
    Category: hTxn,
    //line sql.y: 8273
    Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { READ COMMITTED | REPEATABLE READ | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
    //line sql.y: 8282
    SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
  },
  //line sql.y: 8481
  `SHOW`: {
    //line sql.y: 8482
    Category: hGroup,
    //line sql.y: 8483
    Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS, SHOW TRIGGERS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW DEFAULT SESSION VARIABLES,
SHOW ENUMS, SHOW FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS,
SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW COMMIT TIMESTAMP,
SHOW FULL TABLE SCANS, SHOW CREATE EXTERNAL CONNECTIONS, SHOW EXTERNAL CONNECTIONS
`,
  },
  //line sql.y: 8546
  `CLOSE`: {
    ShortDescription: `close SQL cursor`,
    //line sql.y: 8547
    Category: hMisc,
    //line sql.y: 8548
    Text: `CLOSE [ ALL | <name> ]
`,
    //line sql.y: 8549
    SeeAlso: `DECLARE, FETCH
`,
  },
  //line sql.y: 8565
  `DECLARE`: {
    ShortDescription: `declare SQL cursor`,
    //line sql.y: 8566
    Category: hMisc,
    //line sql.y: 8567
    Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
    //line sql.y: 8568
    SeeAlso: `CLOSE, FETCH
`,
  },
  //line sql.y: 8637
  `FETCH`: {
    ShortDescription: `fetch rows from a SQL cursor`,
    //line sql.y: 8638
    Category: hMisc,
    //line sql.y: 8639
    Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
    //line sql.y: 8640
    SeeAlso: `MOVE, CLOSE, DECLARE
`,
  },
  //line sql.y: 8650
  `MOVE`: {
    ShortDescription: `move a SQL cursor without fetching rows`,
    //line sql.y: 8651
    Category: hMisc,
    //line sql.y: 8652
    Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
    //line sql.y: 8653
    SeeAlso: `FETCH, CLOSE, DECLARE
`,
  },
  //line sql.y: 8789
  `SHOW SESSION`: {
    ShortDescription: `display session variables`,
    //line sql.y: 8790
    Category: hCfg,
    //line sql.y: 8791
    Text: `SHOW [SESSION] { <var> | ALL }
`,
    //line sql.y: 8792
    SeeAlso: `WEBDOCS/show-vars.html
`,
  },
  //line sql.y: 8837
  `SHOW STATISTICS`: {
    ShortDescription: `display table statistics`,
    //line sql.y: 8838
    Category: hMisc,
    //line sql.y: 8839
    Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
    //line sql.y: 8850
    SeeAlso: `SHOW HISTOGRAM
`,
  },
  //line sql.y: 8872
  `SHOW HISTOGRAM`: {
    ShortDescription: `display histogram (experimental)`,
    //line sql.y: 8873
    Category: hExperimental,
    //line sql.y: 8874
    Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
    //line sql.y: 8878
    SeeAlso: `SHOW STATISTICS
`,
  },
  //line sql.y: 8891
  `SHOW BACKUP`: {
    ShortDescription: `list backup contents`,
    //line sql.y: 8892
    Category: hCCL,
    //line sql.y: 8893
    Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
    //line sql.y: 8894
    SeeAlso: `WEBDOCS/show-backup.html
`,
  },
  //line sql.y: 9085
  `SHOW CLUSTER SETTING`: {
    ShortDescription: `display cluster settings`,
    //line sql.y: 9086
    Category: hCfg,
    //line sql.y: 9087
    Text: `
SHOW CLUSTER SETTING <var> [ FOR VIRTUAL CLUSTER <virtual_cluster_spec> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR VIRTUAL CLUSTER <virtual_cluster_spec> ]
`,
    //line sql.y: 9090
    SeeAlso: `WEBDOCS/cluster-settings.html
`,
  },
  //line sql.y: 9140
  `SHOW COLUMNS`: {
    ShortDescription: `list columns in relation`,
    //line sql.y: 9141
    Category: hDDL,
    //line sql.y: 9142
    Text: `SHOW COLUMNS FROM <tablename>
`,
    //line sql.y: 9143
    SeeAlso: `WEBDOCS/show-columns.html
`,
  },
  //line sql.y: 9151
  `SHOW PARTITIONS`: {
    ShortDescription: `list partition information`,
    //line sql.y: 9152
    Category: hDDL,
    //line sql.y: 9153
    Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
    //line sql.y: 9154
    SeeAlso: `WEBDOCS/show-partitions.html
`,
  },
  //line sql.y: 9174
  `SHOW DATABASES`: {
    ShortDescription: `list databases`,
    //line sql.y: 9175
    Category: hDDL,
    //line sql.y: 9176
    Text: `SHOW DATABASES
`,
    //line sql.y: 9177
    SeeAlso: `WEBDOCS/show-databases.html
`,
  },
  //line sql.y: 9185
  `SHOW DEFAULT PRIVILEGES`: {
    ShortDescription: `list default privileges`,
    //line sql.y: 9186
    Category: hDDL,
    //line sql.y: 9187
    Text: `SHOW DEFAULT PRIVILEGES
`,
    //line sql.y: 9188
    SeeAlso: `WEBDOCS/show-default-privileges
`,
  },
  //line sql.y: 9211
  `SHOW ENUMS`: {
    ShortDescription: `list enums`,
    //line sql.y: 9212
    Category: hMisc,
    //line sql.y: 9213
    Text: `SHOW ENUMS
`,
  },
  //line sql.y: 9241
  `SHOW EXTERNAL CONNECTIONS`: {
    ShortDescription: `list external connections`,
    //line sql.y: 9242
    Category: hMisc,
    //line sql.y: 9243
    Text: `
SHOW EXTERNAL CONNECTIONS
SHOW EXTERNAL CONNECTION <connection_name>
`,
  },
  //line sql.y: 9258
  `SHOW TYPES`: {
    ShortDescription: `list user defined types`,
    //line sql.y: 9259
    Category: hMisc,
    //line sql.y: 9260
    Text: `SHOW TYPES [WITH_COMMENT]
`,
  },
  //line sql.y: 9268
  `SHOW GRANTS`: {
    ShortDescription: `list grants`,
    //line sql.y: 9269
    Category: hPriv,
    //line sql.y: 9270
    Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
    //line sql.y: 9276
    SeeAlso: `WEBDOCS/show-grants.html
`,
  },
  //line sql.y: 9296
  `SHOW INDEXES`: {
    ShortDescription: `list indexes`,
    //line sql.y: 9297
    Category: hDDL,
    //line sql.y: 9298
    Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
    //line sql.y: 9299
    SeeAlso: `WEBDOCS/show-index.html
`,
  },
  //line sql.y: 9329
  `SHOW COMMIT TIMESTAMP`: {
    ShortDescription: `show timestamp commit timestamp of last transaction`,
    //line sql.y: 9330
    Category: hMisc,
    //line sql.y: 9331
    Text: `SHOW COMMIT TIMESTAMP

Shows the commit timestamp of the last committed transaction if not currently
in a transaction. If currently in a transaction, implicitly commits the
transaction, returning any errors which may have occurred during the commit.
The transaction state will remain open from the perspective of the client,
meaning that a COMMIT must be issued to move the connection back to a state
where new statements may be issued.
`,
  },
  //line sql.y: 9345
  `SHOW CONSTRAINTS`: {
    ShortDescription: `list constraints`,
    //line sql.y: 9346
    Category: hDDL,
    //line sql.y: 9347
    Text: `SHOW CONSTRAINTS FROM <tablename>
`,
    //line sql.y: 9348
    SeeAlso: `WEBDOCS/show-constraints.html
`,
  },
  //line sql.y: 9361
  `SHOW TRIGGERS`: {
    ShortDescription: `list triggers on a table`,
    //line sql.y: 9362
    Category: hDDL,
    //line sql.y: 9363
    Text: `SHOW TRIGGERS FROM <tablename>
TODO(drewk): Add docs link.
`,
  },
  //line sql.y: 9373
  `SHOW STATEMENTS`: {
    ShortDescription: `list running statements`,
    //line sql.y: 9374
    Category: hMisc,
    //line sql.y: 9375
    Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
    //line sql.y: 9376
    SeeAlso: `CANCEL QUERIES
`,
  },
  //line sql.y: 9403
  `SHOW JOBS`: {
    ShortDescription: `list background jobs`,
    //line sql.y: 9404
    Category: hMisc,
    //line sql.y: 9405
    Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause] [WITH EXECUTION DETAILS]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid> [WITH EXECUTION DETAILS]
`,
    //line sql.y: 9409
    SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
  },
  //line sql.y: 9519
  `SHOW SCHEDULES`: {
    ShortDescription: `list periodic schedules`,
    //line sql.y: 9520
    Category: hMisc,
    //line sql.y: 9521
    Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
    //line sql.y: 9524
    SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
  },
  //line sql.y: 9579
  `SHOW TRACE`: {
    ShortDescription: `display an execution trace`,
    //line sql.y: 9580
    Category: hMisc,
    //line sql.y: 9581
    Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
    //line sql.y: 9583
    SeeAlso: `EXPLAIN
`,
  },
  //line sql.y: 9606
  `SHOW SESSIONS`: {
    ShortDescription: `list open client sessions`,
    //line sql.y: 9607
    Category: hMisc,
    //line sql.y: 9608
    Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
    //line sql.y: 9609
    SeeAlso: `CANCEL SESSIONS
`,
  },
  //line sql.y: 9622
  `SHOW TABLES`: {
    ShortDescription: `list tables`,
    //line sql.y: 9623
    Category: hDDL,
    //line sql.y: 9624
    Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
    //line sql.y: 9625
    SeeAlso: `WEBDOCS/show-tables.html
`,
  },
  //line sql.y: 9653
  `SHOW FUNCTIONS`: {
    ShortDescription: `list functions`,
    //line sql.y: 9654
    Category: hDDL,
    //line sql.y: 9655
    Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
  },
  //line sql.y: 9681
  `SHOW PROCEDURES`: {
    ShortDescription: `list procedures`,
    //line sql.y: 9682
    Category: hDDL,
    //line sql.y: 9683
    Text: `SHOW PROCEDURES [FROM <databasename> [ . <schemaname> ] ]
`,
  },
  //line sql.y: 9709
  `SHOW TRANSACTIONS`: {
    ShortDescription: `list open client transactions across the cluster`,
    //line sql.y: 9710
    Category: hMisc,
    //line sql.y: 9711
    Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
  },
  //line sql.y: 9728
  `SHOW SCHEMAS`: {
    ShortDescription: `list schemas`,
    //line sql.y: 9729
    Category: hDDL,
    //line sql.y: 9730
    Text: `SHOW SCHEMAS [FROM <databasename> ] [WITH COMMENT]
`,
  },
  //line sql.y: 9742
  `SHOW SEQUENCES`: {
    ShortDescription: `list sequences`,
    //line sql.y: 9743
    Category: hDDL,
    //line sql.y: 9744
    Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
  },
  //line sql.y: 9756
  `SHOW SYNTAX`: {
    ShortDescription: `analyze SQL syntax`,
    //line sql.y: 9757
    Category: hMisc,
    //line sql.y: 9758
    Text: `SHOW SYNTAX <string>
`,
  },
  //line sql.y: 9777
  `SHOW POLICIES`: {
    ShortDescription: `list row-level security policies defined for a table`,
    //line sql.y: 9778
    Category: hDDL,
    //line sql.y: 9779
    Text: `SHOW POLICIES FOR <table_name>
`,
  },
  //line sql.y: 9809
  `SHOW SAVEPOINT`: {
    ShortDescription: `display current savepoint properties`,
    //line sql.y: 9810
    Category: hCfg,
    //line sql.y: 9811
    Text: `SHOW SAVEPOINT STATUS
`,
  },
  //line sql.y: 9819
  `SHOW TRANSACTION`: {
    ShortDescription: `display current transaction properties`,
    //line sql.y: 9820
    Category: hCfg,
    //line sql.y: 9821
    Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
    //line sql.y: 9822
    SeeAlso: `WEBDOCS/show-vars.html
`,
  },
  //line sql.y: 9841
  `SHOW TRANSFER`: {
    ShortDescription: `display session state for connection migration`,
    //line sql.y: 9842
    Category: hMisc,
    //line sql.y: 9843
    Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
  },
  //line sql.y: 9855
  `SHOW CREATE`: {
    ShortDescription: `display the CREATE statement for one or more database objects`,
    //line sql.y: 9856
    Category: hDDL,
    //line sql.y: 9857
    Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE | FUNCTION | PROCEDURE ] <object_name>
SHOW CREATE TRIGGER <trigger_name> ON <table_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TRIGGERS
SHOW CREATE ALL TYPES
SHOW CREATE ALL ROUTINES
`,
    //line sql.y: 9866
    SeeAlso: `WEBDOCS/show-create.html
`,
  },
  //line sql.y: 9975
  `SHOW CREATE SCHEDULES`: {
    ShortDescription: `list CREATE statements for scheduled jobs`,
    //line sql.y: 9976
    Category: hDDL,
    //line sql.y: 9977
    Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
    //line sql.y: 9980
    SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
  },
  //line sql.y: 9993
  `SHOW CREATE EXTERNAL CONNECTIONS`: {
    ShortDescription: `list CREATE statements for external connections`,
    //line sql.y: 9994
    Category: hDDL,
    //line sql.y: 9995
    Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
  },
  //line sql.y: 10010
  `SHOW USERS`: {
    ShortDescription: `list defined users`,
    //line sql.y: 10011
    Category: hPriv,
    //line sql.y: 10012
    Text: `SHOW USERS
`,
    //line sql.y: 10013
    SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
  },
  //line sql.y: 10021
  `SHOW DEFAULT SESSION VARIABLES FOR ROLE`: {
    ShortDescription: `list default session variables for role`,
    //line sql.y: 10022
    Category: hPriv,
    //line sql.y: 10023
    Text: `SHOW DEFAULT SESSION VARIABLES FOR ROLE <name>
`,
  },
  //line sql.y: 10039
  `SHOW ROLES`: {
    ShortDescription: `list defined roles`,
    //line sql.y: 10040
    Category: hPriv,
    //line sql.y: 10041
    Text: `SHOW ROLES
`,
    //line sql.y: 10042
    SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
  },
  //line sql.y: 10050
  `SHOW ZONE CONFIGURATION`: {
    ShortDescription: `display current zone configuration`,
    //line sql.y: 10051
    Category: hCfg,
    //line sql.y: 10052
    Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
    //line sql.y: 10055
    SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
  },
  //line sql.y: 10111
  `SHOW RANGE`: {
    ShortDescription: `show range information for a row`,
    //line sql.y: 10112
    Category: hMisc,
    //line sql.y: 10113
    Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
  },
  //line sql.y: 10134
  `SHOW RANGES`: {
    ShortDescription: `list ranges`,
    //line sql.y: 10135
    Category: hMisc,
    //line sql.y: 10136
    Text: `
SHOW CLUSTER RANGES                                  [ WITH <options...> ]
SHOW RANGES FROM DATABASE <databasename>             [ WITH <options...> ]
SHOW RANGES FROM CURRENT_CATALOG                     [ WITH <options...> ]
SHOW RANGES FROM TABLE   <tablename>                 [ WITH <options...> ]
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname> [ WITH <options...> ]

Options:
  INDEXES: list indexes contained per range
  TABLES:  list tables contained per range
  DETAILS: add range size, leaseholder and other details
  KEYS:    include binary start/end keys
  EXPLAIN: show the SQL queries that produces the result

Note: the availability of some of the options listed above is subject
to cluster configuration. See the documentation for details.

`,
    //line sql.y: 10153
    SeeAlso: `WEBDOCS/show-ranges.html
`,
  },
  //line sql.y: 10229
  `SHOW SURVIVAL GOAL`: {
    ShortDescription: `list survival goals`,
    //line sql.y: 10230
    Category: hDDL,
    //line sql.y: 10231
    Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
  },
  //line sql.y: 10246
  `SHOW REGIONS`: {
    ShortDescription: `list regions`,
    //line sql.y: 10247
    Category: hDDL,
    //line sql.y: 10248
    Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
  },
  //line sql.y: 10659
  `PAUSE`: {
    ShortDescription: `pause background tasks`,
    //line sql.y: 10660
    Category: hGroup,
    //line sql.y: 10661
    Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
  },
  //line sql.y: 10668
  `RESUME`: {
    ShortDescription: `resume background tasks`,
    //line sql.y: 10669
    Category: hGroup,
    //line sql.y: 10670
    Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
  },
  //line sql.y: 10677
  `RESUME ALL JOBS`: {
    ShortDescription: `resume background jobs`,
    //line sql.y: 10678
    Category: hMisc,
    //line sql.y: 10679
    Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
  },
  //line sql.y: 10688
  `PAUSE JOBS`: {
    ShortDescription: `pause selected background jobs`,
    //line sql.y: 10689
    Category: hMisc,
    //line sql.y: 10690
    Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
    //line sql.y: 10693
    SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
  },
  //line sql.y: 10742
  `PAUSE SCHEDULES`: {
    ShortDescription: `pause scheduled jobs`,
    //line sql.y: 10743
    Category: hMisc,
    //line sql.y: 10744
    Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
    //line sql.y: 10748
    SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
  },
  //line sql.y: 10769
  `PAUSE ALL JOBS`: {
    ShortDescription: `pause all background jobs`,
    //line sql.y: 10770
    Category: hMisc,
    //line sql.y: 10771
    Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
  },
  //line sql.y: 10781
  `CREATE SCHEMA`: {
    ShortDescription: `create a new schema`,
    //line sql.y: 10782
    Category: hDDL,
    //line sql.y: 10783
    Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
  },
  //line sql.y: 10816
  `ALTER SCHEMA`: {
    ShortDescription: `alter an existing schema`,
    //line sql.y: 10817
    Category: hDDL,
    //line sql.y: 10818
    Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
  },
  //line sql.y: 10844
  `CREATE TABLE`: {
    ShortDescription: `create a new table`,
    //line sql.y: 10845
    Category: hDDL,
    //line sql.y: 10846
    Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED | VECTOR] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
    //line sql.y: 10873
    SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
  },
  //line sql.y: 11868
  `CREATE SEQUENCE`: {
    ShortDescription: `create a new sequence`,
    //line sql.y: 11869
    Category: hDDL,
    //line sql.y: 11870
    Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
    //line sql.y: 11881
    SeeAlso: `CREATE TABLE
`,
  },
  //line sql.y: 11968
  `TRUNCATE`: {
    ShortDescription: `empty one or more tables`,
    //line sql.y: 11969
    Category: hDML,
    //line sql.y: 11970
    Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 11971
    SeeAlso: `WEBDOCS/truncate.html
`,
  },
  //line sql.y: 11995
  `CREATE ROLE`: {
    ShortDescription: `define a new role`,
    //line sql.y: 11996
    Category: hPriv,
    //line sql.y: 11997
    Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
    //line sql.y: 11998
    SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
  },
  //line sql.y: 12010
  `ALTER ROLE`: {
    ShortDescription: `alter a role`,
    //line sql.y: 12011
    Category: hPriv,
    //line sql.y: 12012
    Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
    //line sql.y: 12016
    SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
  },
  //line sql.y: 12094
  `CREATE VIEW`: {
    ShortDescription: `create a new view`,
    //line sql.y: 12095
    Category: hDDL,
    //line sql.y: 12096
    Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] [WITH ( <option> [= <value>] [, ....] )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]

Options:
  security_invoker [= { true | false | 1 | 0 }]: controls view permissions (defaults to true if specified without value)
`,
    //line sql.y: 12102
    SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
  },
  //line sql.y: 12395
  `CREATE TYPE`: {
    ShortDescription: `create a type`,
    //line sql.y: 12396
    Category: hDDL,
    //line sql.y: 12397
    Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
  },
  //line sql.y: 12495
  `CREATE INDEX`: {
    ShortDescription: `create a new index`,
    //line sql.y: 12496
    Category: hDDL,
    //line sql.y: 12497
    Text: `
CREATE [UNIQUE | INVERTED | VECTOR] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
    //line sql.y: 12504
    SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
  },
  //line sql.y: 13114
  `ALTER DEFAULT PRIVILEGES`: {
    ShortDescription: `alter default privileges on an object`,
    //line sql.y: 13115
    Category: hDDL,
    //line sql.y: 13116
    Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
  },
  //line sql.y: 13263
  `RELEASE`: {
    ShortDescription: `complete a sub-transaction`,
    //line sql.y: 13264
    Category: hTxn,
    //line sql.y: 13265
    Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
    //line sql.y: 13266
    SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
  },
  //line sql.y: 13274
  `RESUME JOBS`: {
    ShortDescription: `resume selected background jobs`,
    //line sql.y: 13275
    Category: hMisc,
    //line sql.y: 13276
    Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
    //line sql.y: 13279
    SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
  },
  //line sql.y: 13301
  `RESUME SCHEDULES`: {
    ShortDescription: `resume executing scheduled jobs`,
    //line sql.y: 13302
    Category: hMisc,
    //line sql.y: 13303
    Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
    //line sql.y: 13309
    SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
  },
  //line sql.y: 13330
  `DROP SCHEDULES`: {
    ShortDescription: `destroy specified schedules`,
    //line sql.y: 13331
    Category: hMisc,
    //line sql.y: 13332
    Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
    //line sql.y: 13338
    SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
  },
  //line sql.y: 13359
  `SAVEPOINT`: {
    ShortDescription: `start a sub-transaction`,
    //line sql.y: 13360
    Category: hTxn,
    //line sql.y: 13361
    Text: `SAVEPOINT <savepoint name>
`,
    //line sql.y: 13362
    SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
  },
  //line sql.y: 13380
  `BEGIN`: {
    ShortDescription: `start a transaction`,
    //line sql.y: 13381
    Category: hTxn,
    //line sql.y: 13382
    Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { READ COMMITTED | REPEATABLE READ | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
    //line sql.y: 13390
    SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
  },
  //line sql.y: 13400
  `COMMIT`: {
    ShortDescription: `commit the current transaction`,
    //line sql.y: 13401
    Category: hTxn,
    //line sql.y: 13402
    Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
    //line sql.y: 13405
    SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
  },
  //line sql.y: 13424
  `ROLLBACK`: {
    ShortDescription: `abort the current (sub-)transaction`,
    //line sql.y: 13425
    Category: hTxn,
    //line sql.y: 13426
    Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
    //line sql.y: 13429
    SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
  },
  //line sql.y: 13564
  `PREPARE TRANSACTION`: {
    ShortDescription: `prepare the current transaction for two-phase commit`,
    //line sql.y: 13565
    Category: hTxn,
    //line sql.y: 13566
    Text: `PREPARE TRANSACTION <transaction-id>
`,
    //line sql.y: 13567
    SeeAlso: `COMMIT PREPARED, ROLLBACK PREPARED
`,
  },
  //line sql.y: 13574
  `COMMIT PREPARED`: {
    ShortDescription: `commit the named transaction as part of two-phase commit`,
    //line sql.y: 13575
    Category: hTxn,
    //line sql.y: 13576
    Text: `COMMIT PREPARED <transaction-id>
`,
    //line sql.y: 13577
    SeeAlso: `PREPARE TRANSACTION, ROLLBACK PREPARED
`,
  },
  //line sql.y: 13584
  `ROLLBACK PREPARED`: {
    ShortDescription: `rollback the named transaction as part of two-phase commit`,
    //line sql.y: 13585
    Category: hTxn,
    //line sql.y: 13586
    Text: `ROLLBACK PREPARED <transaction-id>
`,
    //line sql.y: 13587
    SeeAlso: `PREPARE TRANSACTION, COMMIT PREPARED
`,
  },
  //line sql.y: 13594
  `CREATE DATABASE`: {
    ShortDescription: `create a new database`,
    //line sql.y: 13595
    Category: hDDL,
    //line sql.y: 13596
    Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
    //line sql.y: 13597
    SeeAlso: `WEBDOCS/create-database.html
`,
  },
  //line sql.y: 13802
  `INSERT`: {
    ShortDescription: `create new rows in a table`,
    //line sql.y: 13803
    Category: hDML,
    //line sql.y: 13804
    Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
    //line sql.y: 13812
    SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
  },
  //line sql.y: 13831
  `UPSERT`: {
    ShortDescription: `create or replace rows in a table`,
    //line sql.y: 13832
    Category: hDML,
    //line sql.y: 13833
    Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
    //line sql.y: 13837
    SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
  },
  //line sql.y: 13971
  `UPDATE`: {
    ShortDescription: `update rows of a table`,
    //line sql.y: 13972
    Category: hDML,
    //line sql.y: 13973
    Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [FROM <source>]
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
    //line sql.y: 13981
    SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
  },
  //line sql.y: 14037
  `REASSIGN OWNED BY`: {
    ShortDescription: `change ownership of all objects`,
    //line sql.y: 14038
    Category: hPriv,
    //line sql.y: 14039
    Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
    //line sql.y: 14041
    SeeAlso: `DROP OWNED BY
`,
  },
  //line sql.y: 14052
  `DROP OWNED BY`: {
    ShortDescription: `remove database objects owned by role(s).`,
    //line sql.y: 14053
    Category: hPriv,
    //line sql.y: 14054
    Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
    //line sql.y: 14056
    SeeAlso: `REASSIGN OWNED BY
`,
  },
  //line sql.y: 14236
  `<SELECTCLAUSE>`: {
    ShortDescription: `access tabular data`,
    //line sql.y: 14237
    Category: hDML,
    //line sql.y: 14238
    Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
  },
  //line sql.y: 14249
  `SELECT`: {
    ShortDescription: `retrieve rows from a data source and compute a result`,
    //line sql.y: 14250
    Category: hDML,
    //line sql.y: 14251
    Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
    //line sql.y: 14263
    SeeAlso: `WEBDOCS/select-clause.html
`,
  },
  //line sql.y: 14337
  `TABLE`: {
    ShortDescription: `select an entire table`,
    //line sql.y: 14338
    Category: hDML,
    //line sql.y: 14339
    Text: `TABLE <tablename>
`,
    //line sql.y: 14340
    SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
  },
  //line sql.y: 14741
  `VALUES`: {
    ShortDescription: `select a given set of values`,
    //line sql.y: 14742
    Category: hDML,
    //line sql.y: 14743
    Text: `VALUES ( <exprs...> ) [, ...]
`,
    //line sql.y: 14744
    SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
  },
  //line sql.y: 14888
  `<SOURCE>`: {
    ShortDescription: `define a data source for SELECT`,
    //line sql.y: 14889
    Category: hDML,
    //line sql.y: 14890
    Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' AVOID_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED | STRAIGHT } ]

`,
    //line sql.y: 14916
    SeeAlso: `WEBDOCS/table-expressions.html
`,
  },
}
