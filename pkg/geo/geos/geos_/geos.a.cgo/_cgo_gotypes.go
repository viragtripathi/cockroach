//go:cgo_ldflag "-mmacosx-version-min=26.0"
//go:cgo_ldflag "-no-canonical-prefixes"
//go:cgo_ldflag "-fobjc-link-runtime"
//go:cgo_ldflag "-headerpad_max_install_names"
//go:cgo_ldflag "-lc++"
//go:cgo_ldflag "-lm"
//go:cgo_ldflag "-Xlinker"
//go:cgo_ldflag "-no_warn_duplicate_libraries"
//go:cgo_ldflag "-ldl"
//go:cgo_ldflag "-lm"
// Code generated by cmd/cgo; DO NOT EDIT.

package geos

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype_CR_GEOS = _Ctype_struct_CR_GEOS

type _Ctype_CR_GEOS_BufferParamsInput = _Ctype_struct___2

type _Ctype_CR_GEOS_Geometry unsafe.Pointer

type _Ctype_CR_GEOS_PreparedGeometry = _Ctype_struct___3

type _Ctype_CR_GEOS_PreparedInternalGeometry unsafe.Pointer

type _Ctype_CR_GEOS_Slice = _Ctype_struct___0

type _Ctype_CR_GEOS_Status = _Ctype_struct___1

type _Ctype_CR_GEOS_String = _Ctype_struct___1

type _Ctype_char int8

type _Ctype_double float64

type _Ctype_int int32

type _Ctype_size_t = _Ctype_ulong

type _Ctype_struct_CR_GEOS _cgopackage.Incomplete

type _Ctype_struct___0 struct {
	data	*_Ctype_char
	len	_Ctype_size_t
}

type _Ctype_struct___1 struct {
	data	*_Ctype_char
	len	_Ctype_size_t
}

type _Ctype_struct___2 struct {
	endCapStyle		_Ctype_int
	joinStyle		_Ctype_int
	singleSided		_Ctype_int
	quadrantSegments	_Ctype_int
	mitreLimit		_Ctype_double
}

type _Ctype_struct___3 struct {
	g	_Ctype_CR_GEOS_Geometry
	p	_Ctype_CR_GEOS_PreparedInternalGeometry
}

type _Ctype_ulong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})

//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Area(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Area, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Boundary(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Boundary, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Buffer(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___2, p3 _Ctype_double, p4 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Buffer, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Centroid(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Centroid, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect _cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_ClipByRect(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_double, p3 _Ctype_double, p4 _Ctype_double, p5 _Ctype_double, p6 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_ClipByRect, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Contains(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Contains, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull _cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_ConvexHull(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_ConvexHull, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy _cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_CoveredBy(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_CoveredBy, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Covers(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Covers, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Crosses(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Crosses, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Difference(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Difference, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Disjoint(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Disjoint, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Distance(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Distance, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Equals(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Equals, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact _cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_EqualsExact(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_double, p4 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_EqualsExact, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance _cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_FrechetDistance(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistance, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify _cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_FrechetDistanceDensify(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_double, p4 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_FrechetDistanceDensify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance _cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_HausdorffDistance(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistance, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify _cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_HausdorffDistanceDensify(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_double, p4 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_HausdorffDistanceDensify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Init(p0 _Ctype_struct___0, p1 _Ctype_struct___0, p2 **_Ctype_struct_CR_GEOS) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Interpolate(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_double, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Interpolate, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Intersection(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersection, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Intersects(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Intersects, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_IsSimple(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsSimple, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_IsValid(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValid, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_IsValidDetail(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_int, p3 *_Ctype_char, p4 *_Ctype_struct___1, p5 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidDetail, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_IsValidReason(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_IsValidReason, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Length(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Length, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge _cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_LineMerge(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_LineMerge, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_MakeValid(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_MakeValid, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_MinimumBoundingCircle(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_double, p3 *_Ctype_struct___1, p4 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumBoundingCircle, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_MinimumClearance(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearance, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_MinimumClearanceLine(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumClearanceLine, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_MinimumRotatedRectangle(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_MinimumRotatedRectangle, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Node(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Node, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Normalize(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Normalize, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Overlaps(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Overlaps, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_PointOnSurface(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_PointOnSurface, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Prepare(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 **_Ctype_struct___3) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Prepare, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_PreparedGeometryDestroy(p0 *_Ctype_struct_CR_GEOS, p1 *_Ctype_struct___3) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedGeometryDestroy, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_PreparedIntersects(p0 *_Ctype_struct_CR_GEOS, p1 *_Ctype_struct___3, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_PreparedIntersects, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Relate(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Relate, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule _cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_RelateBoundaryNodeRule(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_int, p4 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelateBoundaryNodeRule, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern _cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_RelatePattern(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_struct___0, p4 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_RelatePattern, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths _cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_SharedPaths(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_SharedPaths, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Simplify(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1, p3 _Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Simplify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Snap(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_double, p4 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Snap, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference _cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_SymDifference(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_SymDifference, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify _cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_TopologyPreserveSimplify(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1, p3 _Ctype_double) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_TopologyPreserveSimplify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Touches(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Touches, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion _cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_UnaryUnion(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_UnaryUnion, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Union(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Union, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Version(p0 *_Ctype_struct_CR_GEOS, p1 *_Ctype_struct___1) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Version, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram _cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_VoronoiDiagram(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 _Ctype_double, p4 _Ctype_int, p5 *_Ctype_struct___1) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_VoronoiDiagram, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within
var __cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within byte
var _cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within)

//go:cgo_unsafe_args
func _Cfunc_CR_GEOS_Within(p0 *_Ctype_struct_CR_GEOS, p1 _Ctype_struct___0, p2 _Ctype_struct___0, p3 *_Ctype_char) (r1 _Ctype_struct___1) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_CR_GEOS_Within, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_330cc5f7b81a_Cfunc_free
//go:linkname __cgofn__cgo_330cc5f7b81a_Cfunc_free _cgo_330cc5f7b81a_Cfunc_free
var __cgofn__cgo_330cc5f7b81a_Cfunc_free byte
var _cgo_330cc5f7b81a_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_330cc5f7b81a_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_330cc5f7b81a_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
