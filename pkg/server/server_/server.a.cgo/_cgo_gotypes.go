//go:cgo_ldflag "-mmacosx-version-min=26.0"
//go:cgo_ldflag "-no-canonical-prefixes"
//go:cgo_ldflag "-fobjc-link-runtime"
//go:cgo_ldflag "-headerpad_max_install_names"
//go:cgo_ldflag "-lm"
//go:cgo_ldflag "-Xlinker"
//go:cgo_ldflag "-no_warn_duplicate_libraries"
// Code generated by cmd/cgo; DO NOT EDIT.

package server

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype_int int32

type _Ctype_size_t = _Ctype_ulong

type _Ctype_u_int = _Ctype_uint

type _Ctype_uint uint32

type _Ctype_ulong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})
const _Ciconst_CTL_KERN = 0x1
const _Ciconst_KERN_MAXFILES = 0x7
const _Ciconst_KERN_MAXFILESPERPROC = 0x1d

//go:cgo_import_static _cgo_8b63fd26bc0c_C2func_sysctl
//go:linkname __cgofn__cgo_8b63fd26bc0c_C2func_sysctl _cgo_8b63fd26bc0c_C2func_sysctl
var __cgofn__cgo_8b63fd26bc0c_C2func_sysctl byte
var _cgo_8b63fd26bc0c_C2func_sysctl = unsafe.Pointer(&__cgofn__cgo_8b63fd26bc0c_C2func_sysctl)

//go:cgo_unsafe_args
func _C2func_sysctl(p0 *_Ctype_int, p1 _Ctype_u_int, p2 unsafe.Pointer, p3 *_Ctype_size_t, p4 unsafe.Pointer, p5 _Ctype_size_t) (r1 _Ctype_int, r2 error) {
	errno := _cgo_runtime_cgocall(_cgo_8b63fd26bc0c_C2func_sysctl, uintptr(unsafe.Pointer(&p0)))
	if errno != 0 { r2 = syscall.Errno(errno) }
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_8b63fd26bc0c_Cfunc_sysctl
//go:linkname __cgofn__cgo_8b63fd26bc0c_Cfunc_sysctl _cgo_8b63fd26bc0c_Cfunc_sysctl
var __cgofn__cgo_8b63fd26bc0c_Cfunc_sysctl byte
var _cgo_8b63fd26bc0c_Cfunc_sysctl = unsafe.Pointer(&__cgofn__cgo_8b63fd26bc0c_Cfunc_sysctl)

//go:cgo_unsafe_args
func _Cfunc_sysctl(p0 *_Ctype_int, p1 _Ctype_u_int, p2 unsafe.Pointer, p3 *_Ctype_size_t, p4 unsafe.Pointer, p5 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_8b63fd26bc0c_Cfunc_sysctl, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
